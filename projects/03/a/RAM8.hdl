// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way16(in=in, sel=address, a=inA, b=inB, c=inC, d=inD, e=inE, f=inF, g=inG, h=inH);
    DMux8Way(in=load, sel=address, a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);
    Register(in=inA, load=loadA, out=a);
    Register(in=inB, load=loadB, out=b);
    Register(in=inC, load=loadC, out=c);
    Register(in=inD, load=loadD, out=d);
    Register(in=inE, load=loadE, out=e);
    Register(in=inF, load=loadF, out=f);
    Register(in=inG, load=loadG, out=g);
    Register(in=inH, load=loadH, out=h);
    Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address, out=out);
}